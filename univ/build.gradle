buildscript {
    ext {
        kotlinVersion = '1.2.51'
        springBootVersion = '2.0.5.RELEASE'
        springBootDataGemFireVersion="1.0.0.M2"
    }
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
        classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
    }
}

plugins {
    id 'com.google.cloud.tools.jib' version '0.9.7'
}

apply plugin: 'kotlin'
apply plugin: "java"
apply plugin: 'kotlin-spring'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
//apply plugin: 'com.bmuschko.docker-remote-api'


group = 'org.bk.samples'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

compileKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "1.8"
    }
}

repositories {
    mavenCentral()
    jcenter()
    maven { url "https://repo.spring.io/libs-snapshot" }
}


dependencies {
    compile('org.springframework.boot:spring-boot-starter-web') {
        exclude group: "org.springframework.boot", module: "spring-boot-starter-logging"
    }
    compile('com.fasterxml.jackson.module:jackson-module-kotlin')
    compile("org.jetbrains.kotlin:kotlin-stdlib-jdk8")
    compile("org.jetbrains.kotlin:kotlin-reflect")
    compile "org.springframework.geode:spring-gemfire-starter:$springBootDataGemFireVersion"
    compile("org.springframework.hateoas:spring-hateoas")
    compile("io.projectreactor:reactor-core")
    compile("io.vavr:vavr:0.9.2")
    compile(project(":model"))

    compile ("org.apache.logging.log4j:log4j-slf4j-impl")

    testCompile('org.springframework.boot:spring-boot-starter-test') {
        exclude group: "junit", module: "junit"
        exclude module: 'spring-boot-starter-logging'
    }
    testCompile('io.projectreactor:reactor-test')

    testCompile("com.nhaarman:mockito-kotlin:1.6.0")
    testCompile("org.junit.jupiter:junit-jupiter-api")
    testRuntime("org.junit.jupiter:junit-jupiter-engine")
}

jib {
    to {
        image = "geode-univ-sample:${project.version}"
    }
}
